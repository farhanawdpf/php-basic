PHP Arithmetic Operators

Operator	Name	         Example	Result	
+	Addition	       $x + $y	               Sum of $x and $y	
-	Subtraction     $x - $y	Difference of $x and $y	
*	Multiplication  $x * $y	Product of $x and $y	
/	Division	       $x / $y               Quotient of $x and $y	
%	Modulus	       $x % $y	Remainder of $x divided by $y	
**	Exponentiation$x ** $y	Result of raising $x to the $y'th power


<?php
$x = 10;  
$y = 6;

echo $x + $y;
?>

<?php
$x = 10;  
$y = 3;

echo $x ** $y;
?>  


PHP Assignment Operators



Assignment	Same as...	Description	
x = y		x = y	 	The left operand gets set to the value of the expression on the right	
x += y		x = x + y		Addition	
x -= y		x = x - y		Subtraction	
x *= y		x = x * y		Multiplication	
x /= y		x = x / y		Division	
x %= y		x = x % y		Modulus



<?php
$x = 5;
$x *= 6;

echo $x;
?>  


PHP Comparison Operators

Operator		Name		Example			Result	
==		Equal		$x == $y			Returns true if $x is equal to $y	
===		Identical		$x === $y			Returns true if $x is equal to $y, and they are of the same type	
!=		Not equal		$x != $y			Returns true if $x is not equal to $y	
<>		Not equal		$x <> $y			Returns true if $x is not equal to $y	
!==		Not identical	$x !== $y			Returns true if $x is not equal to $y, or they are not of the same type	
>		Greater than	$x > $y			Returns true if $x is greater than $y	
<		Less than		$x < $y			Returns true if $x is less than $y	
>=		Greater than or equal to$x >= $y		Returns true if $x is greater than or equal to $y	
<=		Less than or equal to	$x <= $y		Returns true if $x is less than or equal to $y	



<?php
$x = 100;  
$y = "100";

var_dump($x !== $y); // returns true because types are not equal
?>  

<?php
$x = 100;  
$y = "100";

var_dump($x === $y); // returns false because types are not equal
?>  

<?php
$x = 100;
$y = 50;

var_dump($x > $y); // returns true because $x is greater than $y
?> 

<?php
$x = 50;
$y = 50;

var_dump($x >= $y); // returns true because $x is greater than or equal to $y
?> 

PHP Increment / Decrement Operators


Operator	Same as...	Description
++$x	Pre-increment	Increments $x by one, then returns $x	
$x++	Post-increment	Returns $x, then increments $x by one	
--$x	Pre-decrement	Decrements $x by one, then returns $x	
$x--	Post-decrement	Returns $x, then decrements $x by one




<?php
$x = 10;  
echo ++$x;//11 output new value x=x+1
?> 

<?php
$x = 10;  
echo $x++;//10 old value
?>  

<?php
$x = 10;  
echo --$x;//9
?>  


PHP Logical Operators
Operator	Name	Example	Result
and	And	$x and $y	True if both $x and $y are true	
or	Or	$x or $y	True if either $x or $y is true	
xor	Xor	$x xor $y	True if either $x or $y is true, but not both	
&&	And	$x && $y	True if both $x and $y are true	
||	Or	$x || $y	True if either $x or $y is true	
!	Not	!$x	True if $x is not true

exmple:
<p>Write a message if both conditions are true.</p>

<?php
$x = 100;  
$y = 50;

if ($x == 100 and $y == 50) {
    echo "Hello world!";
}
?>

<?php
$x = 100;  
$y = 50;

if ($x == 100 or $y == 80) {
    echo "Hello world!";
}
?>

<p>Write a message if both conditions are true.</p>

<?php
$x = 100;  
$y = 50;

if ($x == 100 && $y == 50) {
    echo "Hello world!";
}
?>  
<p>Write a message if the condition is NOT true.</p>

<?php
$x = 100;  

if (!($x == 90)) {
    echo "Hello world!";
}
?>  

PHP String Operators


Operator 	 	Name			Example		Result	
.		Concatenation		$txt1 . $txt2	Concatenation of $txt1 and $txt2	
.=		Concatenation assignment	$txt1 .= $txt2	Appends $txt2 to $txt1


<?php
$txt1 = "Hello";
$txt2 = " world!";
echo $txt1 . $txt2;
?>  

<?php
$txt1 = "Hello";
$txt2 = " world!";
$txt1 .= $txt2;
echo $txt1;
?> 



PHP Array Operators
Operator	Name	Example	Result
+	Union	$x + $y	Union of $x and $y	
==	Equality	$x == $y	Returns true if $x and $y have the same key/value pairs	
===	Identity	$x === $y	Returns true if $x and $y have the same key/value pairs in the same order and of the same types	
!=	Inequality	$x != $y	Returns true if $x is not equal to $y	
<>	Inequality	$x <> $y	Returns true if $x is not equal to $y	
!==	Non-identity	$x !== $y	Returns true if $x is not identical to $y


<?php
$x = array("a" => "red", "b" => "green");  
$y = array("c" => "blue", "d" => "yellow");  

print_r($x + $y); // union of $x and $y
?> 

<?php
$x = array("a" => "red", "b" => "green");  
$y = array("c" => "blue", "d" => "yellow");  

var_dump($x == $y); //false
?>  


<?php
$x = array("a" => "red", "b" => "green");  
$y = array("c" => "blue", "d" => "yellow");  

var_dump($x === $y);//false
?>  